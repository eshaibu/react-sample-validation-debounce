{"version":3,"sources":["../node_modules/validatorjs/src/lang sync /^/.//.*$","TextField.jsx","utils/validation.js","App.jsx","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","TextField","name","value","error","type","onChange","title","placeholder","className","rules","fullName","email","userNumber","dob","App","Component","state","formCredentials","formErrors","event","target","this","setState","debounceSingleFieldValidation","handleSubmit","preventDefault","data","validation","Validator","validationResponse","isValid","passes","errors","all","allFieldsValidation","alert","debounce","key","singleFieldValidation","render","noValidate","onSubmit","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ae03fe6.chunk.js","sourcesContent":["var map = {\n\t\"./ar\": 6,\n\t\"./ar.js\": 6,\n\t\"./az\": 7,\n\t\"./az.js\": 7,\n\t\"./be\": 8,\n\t\"./be.js\": 8,\n\t\"./bg\": 9,\n\t\"./bg.js\": 9,\n\t\"./bs\": 10,\n\t\"./bs.js\": 10,\n\t\"./ca\": 11,\n\t\"./ca.js\": 11,\n\t\"./cs\": 12,\n\t\"./cs.js\": 12,\n\t\"./cy\": 13,\n\t\"./cy.js\": 13,\n\t\"./da\": 14,\n\t\"./da.js\": 14,\n\t\"./de\": 15,\n\t\"./de.js\": 15,\n\t\"./el\": 16,\n\t\"./el.js\": 16,\n\t\"./en\": 2,\n\t\"./en.js\": 2,\n\t\"./es\": 17,\n\t\"./es.js\": 17,\n\t\"./et\": 18,\n\t\"./et.js\": 18,\n\t\"./eu\": 19,\n\t\"./eu.js\": 19,\n\t\"./fa\": 20,\n\t\"./fa.js\": 20,\n\t\"./fi\": 21,\n\t\"./fi.js\": 21,\n\t\"./fr\": 22,\n\t\"./fr.js\": 22,\n\t\"./hr\": 23,\n\t\"./hr.js\": 23,\n\t\"./hu\": 24,\n\t\"./hu.js\": 24,\n\t\"./id\": 25,\n\t\"./id.js\": 25,\n\t\"./it\": 26,\n\t\"./it.js\": 26,\n\t\"./ja\": 27,\n\t\"./ja.js\": 27,\n\t\"./ka\": 28,\n\t\"./ka.js\": 28,\n\t\"./ko\": 29,\n\t\"./ko.js\": 29,\n\t\"./lt\": 30,\n\t\"./lt.js\": 30,\n\t\"./lv\": 31,\n\t\"./lv.js\": 31,\n\t\"./mk\": 32,\n\t\"./mk.js\": 32,\n\t\"./mn\": 33,\n\t\"./mn.js\": 33,\n\t\"./ms\": 34,\n\t\"./ms.js\": 34,\n\t\"./nb_NO\": 35,\n\t\"./nb_NO.js\": 35,\n\t\"./nl\": 36,\n\t\"./nl.js\": 36,\n\t\"./pl\": 37,\n\t\"./pl.js\": 37,\n\t\"./pt\": 38,\n\t\"./pt.js\": 38,\n\t\"./pt_BR\": 39,\n\t\"./pt_BR.js\": 39,\n\t\"./ro\": 40,\n\t\"./ro.js\": 40,\n\t\"./ru\": 41,\n\t\"./ru.js\": 41,\n\t\"./se\": 42,\n\t\"./se.js\": 42,\n\t\"./sl\": 43,\n\t\"./sl.js\": 43,\n\t\"./sq\": 44,\n\t\"./sq.js\": 44,\n\t\"./sr\": 45,\n\t\"./sr.js\": 45,\n\t\"./sv\": 46,\n\t\"./sv.js\": 46,\n\t\"./tr\": 47,\n\t\"./tr.js\": 47,\n\t\"./ua\": 48,\n\t\"./ua.js\": 48,\n\t\"./uk\": 49,\n\t\"./uk.js\": 49,\n\t\"./vi\": 50,\n\t\"./vi.js\": 50,\n\t\"./zh\": 51,\n\t\"./zh.js\": 51,\n\t\"./zh_TW\": 52,\n\t\"./zh_TW.js\": 52\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 65;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextField = ({name, value, error, type, onChange, title, placeholder}) => (\n  <div className=\"form-group\">\n    <label>{title}</label>\n    <input\n      className={`form-control ${error ? 'is-invalid' : ''}`}\n      type={type || 'text'}\n      name={name}\n      value={value}\n      placeholder={placeholder || ''}\n      onChange={onChange}\n    />\n    { error && <span className=\"invalid-feedback\">{ error[0] }</span>}\n  </div>\n);\n\nTextField.propTypes = {\n  title: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  error: PropTypes.instanceOf(Array),\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TextField;\n","import Validator from 'validatorjs';\n\nconst rules = {\n  fullName: 'required|min:3|max:30',\n  email: 'required|email',\n  userNumber: 'required|numeric',\n  dob:  'required|regex:/^\\\\d{4}-\\\\d{2}-\\\\d{2}$/',\n};\n\nexport const singleFieldValidation = ({key, value}) => {\n  const validationResponse = {isValid: true};\n  if (rules[key]) {\n    const validation = new Validator({[key]: value}, {[key]: rules[key]});\n    validationResponse.isValid = validation.passes();\n    if (!validationResponse.isValid) {\n      validationResponse.errors = validation.errors.all();\n    }\n  }\n  return validationResponse;\n};\n\nexport const allFieldsValidation = (data) => {\n  const validation = new Validator(data, rules);\n  const validationResponse = {isValid: validation.passes()};\n  if (!validationResponse.isValid) {\n    validationResponse.errors = validation.errors.all();\n  }\n  return validationResponse;\n};\n","import React, {Component} from 'react';\nimport debounce from 'lodash.debounce'\nimport TextField from \"./TextField\";\nimport {singleFieldValidation, allFieldsValidation} from \"./utils/validation\";\n\nconst waitTime = 500;\n\nclass App extends Component {\n  state = {\n    formCredentials: {\n      fullName: '',\n      email: '',\n      userNumber: '',\n      dob: '',\n    },\n    formErrors: {}\n  };\n\n  onChange = (event) => {\n    const {name, value} = event.target;\n    const formCredentials = {...this.state.formCredentials, [name] : value};\n    this.setState({formCredentials});\n    this.debounceSingleFieldValidation({name, value});\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {isValid, errors} = allFieldsValidation(this.state.formCredentials);\n    if (!isValid) {\n      this.setState({formErrors: errors});\n    } else {\n      alert('No error, form can now submit....');\n      this.setState({formErrors: {}});\n    }\n  };\n\n  debounceSingleFieldValidation = debounce(({name, value}) => {\n    const {formErrors} = this.state;\n    const {isValid, errors} = singleFieldValidation({key: name, value});\n    if (!isValid) {\n      this.setState({formErrors: {...formErrors, [name]: errors[name]}});\n    } else {\n      this.setState({formErrors: {...formErrors, [name]: null}});\n    }\n  }, waitTime);\n\n  render() {\n    const {formCredentials, formErrors} = this.state;\n    const {fullName, email, dob, userNumber} = formCredentials;\n    return (\n      <div className=\"vertical-center\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <form className=\"col-md-8 col-xs-10 mx-auto\" noValidate onSubmit={this.handleSubmit}>\n                <TextField\n                  error={formErrors['fullName']}\n                  onChange={this.onChange}\n                  value={fullName}\n                  name=\"fullName\"\n                  title=\"Full Name\"\n                />\n                <TextField\n                  error={formErrors['email']}\n                  onChange={this.onChange}\n                  value={email}\n                  name=\"email\"\n                  title=\"Email\"\n                />\n                <TextField\n                  error={formErrors['userNumber']}\n                  onChange={this.onChange}\n                  value={userNumber}\n                  name=\"userNumber\"\n                  title=\"User Number\"\n                />\n                <TextField\n                  error={formErrors['dob']}\n                  onChange={this.onChange}\n                  value={dob}\n                  name=\"dob\"\n                  placeholder=\"YYYY-MM-DD\"\n                  title=\"Date of Birth\"\n                />\n                <button className=\"btn btn-primary\" type=\"submit\">Submit form</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}