{"version":3,"sources":["../node_modules/validatorjs/src/lang sync /^/.//.*$","TextField.jsx","utils/validation.js","App.jsx","serviceWorker.js","index.js"],"names":["map","./de","./de.js","./el","./el.js","./en","./en.js","./es","./es.js","./fa","./fa.js","./fr","./fr.js","./it","./it.js","./ja","./ja.js","./nb_NO","./nb_NO.js","./nl","./nl.js","./pl","./pl.js","./pt","./pt.js","./ru","./ru.js","./tr","./tr.js","./ua","./ua.js","./vi","./vi.js","./zh","./zh.js","./zh_TW","./zh_TW.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","TextField","_ref","name","value","error","type","onChange","title","placeholder","react_default","a","createElement","className","concat","rules","fullName","email","userNumber","dob","singleFieldValidation","key","validationResponse","isValid","validation","Validator","defineProperty","passes","errors","all","allFieldsValidation","data","waitTime","App","state","formCredentials","formErrors","event","_event$target","target","objectSpread","_this","setState","debounceSingleFieldValidation","handleSubmit","preventDefault","_allFieldsValidation","alert","debounce","_singleFieldValidatio","_this$state","this","noValidate","onSubmit","src_TextField","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.806e0b1a.chunk.js","sourcesContent":["var map = {\n\t\"./de\": 7,\n\t\"./de.js\": 7,\n\t\"./el\": 8,\n\t\"./el.js\": 8,\n\t\"./en\": 3,\n\t\"./en.js\": 3,\n\t\"./es\": 9,\n\t\"./es.js\": 9,\n\t\"./fa\": 10,\n\t\"./fa.js\": 10,\n\t\"./fr\": 11,\n\t\"./fr.js\": 11,\n\t\"./it\": 12,\n\t\"./it.js\": 12,\n\t\"./ja\": 13,\n\t\"./ja.js\": 13,\n\t\"./nb_NO\": 14,\n\t\"./nb_NO.js\": 14,\n\t\"./nl\": 15,\n\t\"./nl.js\": 15,\n\t\"./pl\": 16,\n\t\"./pl.js\": 16,\n\t\"./pt\": 17,\n\t\"./pt.js\": 17,\n\t\"./ru\": 18,\n\t\"./ru.js\": 18,\n\t\"./tr\": 19,\n\t\"./tr.js\": 19,\n\t\"./ua\": 20,\n\t\"./ua.js\": 20,\n\t\"./vi\": 21,\n\t\"./vi.js\": 21,\n\t\"./zh\": 22,\n\t\"./zh.js\": 22,\n\t\"./zh_TW\": 23,\n\t\"./zh_TW.js\": 23\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 42;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextField = ({name, value, error, type, onChange, title, placeholder}) => (\n  <div className=\"form-group\">\n    <label>{title}</label>\n    <input\n      className={`form-control ${error ? 'is-invalid' : ''}`}\n      type={type || 'text'}\n      name={name}\n      value={value}\n      placeholder={placeholder || ''}\n      onChange={onChange}\n    />\n    { error && <span className=\"invalid-feedback\">{ error[0] }</span>}\n  </div>\n);\n\nTextField.propTypes = {\n  title: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  error: PropTypes.instanceOf(Array),\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TextField;\n","import Validator from 'validatorjs';\n\nconst rules = {\n  fullName: 'required|min:3|max:30',\n  email: 'required|email',\n  userNumber: 'required|numeric',\n  dob:  'required|regex:/^\\\\d{4}-\\\\d{2}-\\\\d{2}$/',\n};\n\nexport const singleFieldValidation = ({key, value}) => {\n  const validationResponse = {isValid: true};\n  if (rules[key]) {\n    const validation = new Validator({[key]: value}, {[key]: rules[key]});\n    validationResponse.isValid = validation.passes();\n    if (!validationResponse.isValid) {\n      validationResponse.errors = validation.errors.all();\n    }\n  }\n  return validationResponse;\n};\n\nexport const allFieldsValidation = (data) => {\n  const validation = new Validator(data, rules);\n  const validationResponse = {isValid: validation.passes()};\n  if (!validationResponse.isValid) {\n    validationResponse.errors = validation.errors.all();\n  }\n  return validationResponse;\n};\n","import React, {Component} from 'react';\nimport debounce from 'lodash.debounce'\nimport TextField from \"./TextField\";\nimport {singleFieldValidation, allFieldsValidation} from \"./utils/validation\";\n\nconst waitTime = 500;\n\nclass App extends Component {\n  state = {\n    formCredentials: {\n      fullName: '',\n      email: '',\n      userNumber: '',\n      dob: '',\n    },\n    formErrors: {}\n  };\n\n  onChange = (event) => {\n    const {name, value} = event.target;\n    const formCredentials = {...this.state.formCredentials, [name] : value};\n    this.setState({formCredentials});\n    this.debounceSingleFieldValidation({name, value});\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {isValid, errors} = allFieldsValidation(this.state.formCredentials);\n    if (!isValid) {\n      this.setState({formErrors: errors});\n    } else {\n      alert('No error, form can now submit....');\n      this.setState({formErrors: {}});\n    }\n  };\n\n  debounceSingleFieldValidation = debounce(({name, value}) => {\n    const {formErrors} = this.state;\n    const {isValid, errors} = singleFieldValidation({key: name, value});\n    if (!isValid) {\n      this.setState({formErrors: {...formErrors, [name]: errors[name]}});\n    } else {\n      this.setState({formErrors: {...formErrors, [name]: null}});\n    }\n  }, waitTime);\n\n  render() {\n    const {formCredentials, formErrors} = this.state;\n    const {fullName, email, dob, userNumber} = formCredentials;\n    return (\n      <div className=\"vertical-center\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <form className=\"col-md-8 col-xs-10 mx-auto\" noValidate onSubmit={this.handleSubmit}>\n                <TextField\n                  error={formErrors['fullName']}\n                  onChange={this.onChange}\n                  value={fullName}\n                  name=\"fullName\"\n                  title=\"Full Name\"\n                />\n                <TextField\n                  error={formErrors['email']}\n                  onChange={this.onChange}\n                  value={email}\n                  name=\"email\"\n                  title=\"Email\"\n                />\n                <TextField\n                  error={formErrors['userNumber']}\n                  onChange={this.onChange}\n                  value={userNumber}\n                  name=\"userNumber\"\n                  title=\"User Number\"\n                />\n                <TextField\n                  error={formErrors['dob']}\n                  onChange={this.onChange}\n                  value={dob}\n                  name=\"dob\"\n                  placeholder=\"YYYY-MM-DD\"\n                  title=\"Date of Birth\"\n                />\n                <button className=\"btn btn-primary\" type=\"submit\">Submit form</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}